---
import { Picture } from 'astro:assets'
import MainContent from '../../components/MainContent.astro'
import PageHeader from '../../components/text/PageHeader.astro'
import Layout from '../../layouts/Layout.astro'
import { albumData } from '../../sanity/albumData'

export async function getStaticPaths() {
  const paths = albumData.map((album) => {
    return {
      params: {
        slug: album.slug,
      },
    }
  })

  return paths
}

const { slug } = Astro.params

// Find album by slug
const album = albumData.find((album) => album.slug === slug)

// Destructure album data
const { title, image, artist, type, credits, label, musicLinks } = album || {}
---

<Layout title={`Robby Webb | ${title}`}>
  <MainContent>
    <PageHeader text={`${title}`} />
    <div class="album">
      <Picture
        src={image!}
        width={500}
        height={500}
        formats={['avif', 'webp']}
        title={`${artist.name}: ${title}`}
        loading="eager"
        alt={`${artist.name}: ${title}`}
      />
      <div class="album-info">
        <h2>{artist.name}</h2>
        <p>"{title}" {type}</p>
        <p>{credits} by Robby Webb</p>
        <p>{`Label: ${label}`}</p>
        <div class="album-info_links">
          {
            musicLinks?.map((link) => (
              <a class="site-cta" href={link.link} target="_blank" rel="noopener noreferrer">
                {link.text}
              </a>
            ))
          }
        </div>
      </div>
    </div>
  </MainContent>
</Layout>

<style>
  .album {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: var(--spacing-section);
    max-width: var(--container-medium-width);
    margin: 0 auto;
  }

  .album-info h2 {
    margin-bottom: 2rem;
  }

  .album-info p:last-of-type {
    margin-bottom: clamp(1.5rem, 4vw, 2rem);
  }

  .album-info_links {
    display: flex;
    gap: 0.5rem;

    & .site-cta {
      font-size: var(--size-xs);
    }
  }
</style>
